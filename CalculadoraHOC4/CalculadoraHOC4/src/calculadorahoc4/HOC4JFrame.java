package calculadorahoc4;

import java_cup.runtime.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.BufferedReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*;

public class HOC4JFrame extends javax.swing.JFrame {

    /**
     * Creates new form HOC4JFrame
     */
    public HOC4JFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotonSalir = new javax.swing.JButton();
        BotonLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtLexico = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSintactico = new javax.swing.JTextArea();
        BotonLexico = new javax.swing.JButton();
        BotonSintactico = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BotonSalir.setText("Salir");

        BotonLimpiar.setText("Limpiar");

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        txtLexico.setColumns(20);
        txtLexico.setRows(5);
        jScrollPane2.setViewportView(txtLexico);

        txtSintactico.setColumns(20);
        txtSintactico.setRows(5);
        jScrollPane3.setViewportView(txtSintactico);

        BotonLexico.setText("Analizar Lexicamente");

        BotonSintactico.setText("Analizar Sintacticamente");
        BotonSintactico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSintacticoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 43, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BotonLimpiar)
                        .addGap(30, 30, 30)
                        .addComponent(BotonSalir))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(BotonLexico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonSintactico)
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonSalir)
                            .addComponent(BotonLimpiar)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonLexico)
                    .addComponent(BotonSintactico))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonSintacticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSintacticoActionPerformed
        String cadAux = new String();
        InstrucProgram instruc;
        AnalizadorLexico Lexic = null;
        try{
            Lexic = new AnalizadorLexico(new FileReader("ArchEntrada.txt"));
        }catch(FileNotFoundException ex){
            Logger.getLogger(HOC4JFrame.class.getName()).log(Level.SEVERE,null,ex);
        }
        
        try{
            AnalizadorSintactico Sintac = new AnalizadorSintactico(Lexic);
            Sintac.frmInterfaz = this;
            Sintac.maquinaHoc4 = new MaquinaHOC4();
            
            SymbolHOC s;
            Iterator it= Lexic.maqHOC.TabSimb.ListaSimbolos.iterator();
            /*while(it.hasNext()){
                s = (SymbolHOC) it.next();
            }*/
            Object result = Sintac.parse().value;
            txtArea.append("\nFin de analisis sintactico");
            
            for(int i=0;i<Sintac.maquinaHoc4.progp;i++){
                instruc = Sintac.maquinaHoc4.Prog[i];
                cadAux = "----ERROR----";
                switch(instruc.TipInstr){
                    case INSTRUC:
                        switch(instruc.Instruc){
                            case ADD:
                                cadAux = "instruc ADD";
                            break;
                            case ASSIGN:
                                cadAux = "instruc ASSGN";
                            break;
                            case BLTIN:
                                cadAux = "instruc BLTIN";
                            break;
                            case EVAL:
                                cadAux = "instruc EVAL";
                            break;
                            case SUB:
                                cadAux = "instruc SUB";
                            break;
                            case MUL:
                                cadAux = "instruc MUL";
                            break;
                            case DIV:
                                cadAux = "instruc DIV";
                            break;
                            case NEGATE:
                                cadAux = "instruc NEGATE";
                            break;
                            case POWER:
                                cadAux = "instruc POWER";
                            break;
                            case VARPUSH:
                                cadAux = "instruc VARPUSH";
                            break;
                            case CONSTPUSH:
                                cadAux = "instruc CONSTPUSH";
                            break;
                            case PRINT:
                                cadAux = "instruc PRINT";
                            break;
                            case STOP:
                                cadAux = "instruc STOP";
                            break;
                        }
                        cadAux+='\n';
                        txtArea.append(cadAux);
                    break;
                    case BLTIN:
                        switch(instruc.func_BLTIN){
                            case SIN:
                                cadAux = "bltin SIN";
                            break;
                            case COS:
                                cadAux = "bltin COS";
                            break;
                            case ATAN:
                                cadAux = "bltin ATAN";
                            break;
                            case LOG:
                                cadAux = "bltin LOG";
                            break;
                            case LOG10:
                                cadAux = "bltin LOG10";
                            break;
                            case EXP:
                                cadAux = "bltin EXP";
                            break;
                            case SQRT:
                                cadAux = "bltin SQRT";
                            break;
                            case INTEGER:
                                cadAux = "bltin INTEGER";
                            break;
                            case ABS:
                                cadAux = "bltin ABS";
                            break;
                        }
                        cadAux+='\n';
                        txtArea.append(cadAux);
                    break;
                }
            }
            
        }catch(Exception ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_BotonSintacticoActionPerformed

    /**
     * @param args the command line arguments
     */
    /*
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HOC4JFrame().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonLexico;
    private javax.swing.JButton BotonLimpiar;
    private javax.swing.JButton BotonSalir;
    private javax.swing.JButton BotonSintactico;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextArea txtLexico;
    private javax.swing.JTextArea txtSintactico;
    // End of variables declaration//GEN-END:variables
}
